
# Copyright (C) Igor Sysoev
# Copyright (C) Rap, Inc.


if [ $OPENSSL != NONE ]; then

    case "$CC" in

        cl | bcc32)
            have=RP_OPENSSL . auto/have
            have=RP_SSL . auto/have

            CFLAGS="$CFLAGS -DNO_SYS_TYPES_H"

            CORE_INCS="$CORE_INCS $OPENSSL/openssl/include"
            CORE_DEPS="$CORE_DEPS $OPENSSL/openssl/include/openssl/ssl.h"

            if [ -f $OPENSSL/ms/do_ms.bat ]; then
                # before OpenSSL 1.1.0
                CORE_LIBS="$CORE_LIBS $OPENSSL/openssl/lib/ssleay32.lib"
                CORE_LIBS="$CORE_LIBS $OPENSSL/openssl/lib/libeay32.lib"
            else
                # OpenSSL 1.1.0+
                CORE_LIBS="$CORE_LIBS $OPENSSL/openssl/lib/libssl.lib"
                CORE_LIBS="$CORE_LIBS $OPENSSL/openssl/lib/libcrypto.lib"
            fi

            # libeay32.lib requires gdi32.lib
            CORE_LIBS="$CORE_LIBS gdi32.lib"
            # OpenSSL 1.0.0 requires crypt32.lib
            CORE_LIBS="$CORE_LIBS crypt32.lib"
        ;;

        *)
            have=RP_OPENSSL . auto/have
            have=RP_SSL . auto/have

            CORE_INCS="$CORE_INCS $OPENSSL/.openssl/include"
            CORE_DEPS="$CORE_DEPS $OPENSSL/.openssl/include/openssl/ssl.h"
            CORE_LIBS="$CORE_LIBS $OPENSSL/.openssl/lib/libssl.a"
            CORE_LIBS="$CORE_LIBS $OPENSSL/.openssl/lib/libcrypto.a"
            CORE_LIBS="$CORE_LIBS $RP_LIBDL"
            CORE_LIBS="$CORE_LIBS $RP_LIBPTHREAD"

            if [ "$RP_PLATFORM" = win32 ]; then
                CORE_LIBS="$CORE_LIBS -lgdi32 -lcrypt32 -lws2_32"
            fi
        ;;
    esac

else

    if [ "$RP_PLATFORM" != win32 ]; then

        OPENSSL=NO

        rp_feature="OpenSSL library"
        rp_feature_name="RP_OPENSSL"
        rp_feature_run=no
        rp_feature_incs="#include <openssl/ssl.h>"
        rp_feature_path=
        rp_feature_libs="-lssl -lcrypto $RP_LIBDL $RP_LIBPTHREAD"
        rp_feature_test="SSL_CTX_set_options(NULL, 0)"
        . auto/feature

        if [ $rp_found = no ]; then

            # FreeBSD port

            rp_feature="OpenSSL library in /usr/local/"
            rp_feature_path="/usr/local/include"

            if [ $RP_RPATH = YES ]; then
                rp_feature_libs="-R/usr/local/lib -L/usr/local/lib -lssl -lcrypto"
            else
                rp_feature_libs="-L/usr/local/lib -lssl -lcrypto"
            fi

            rp_feature_libs="$rp_feature_libs $RP_LIBDL $RP_LIBPTHREAD"

            . auto/feature
        fi

        if [ $rp_found = no ]; then

            # NetBSD port

            rp_feature="OpenSSL library in /usr/pkg/"
            rp_feature_path="/usr/pkg/include"

            if [ $RP_RPATH = YES ]; then
                rp_feature_libs="-R/usr/pkg/lib -L/usr/pkg/lib -lssl -lcrypto"
            else
                rp_feature_libs="-L/usr/pkg/lib -lssl -lcrypto"
            fi

            rp_feature_libs="$rp_feature_libs $RP_LIBDL $RP_LIBPTHREAD"

            . auto/feature
        fi

        if [ $rp_found = no ]; then

            # MacPorts

            rp_feature="OpenSSL library in /opt/local/"
            rp_feature_path="/opt/local/include"

            if [ $RP_RPATH = YES ]; then
                rp_feature_libs="-R/opt/local/lib -L/opt/local/lib -lssl -lcrypto"
            else
                rp_feature_libs="-L/opt/local/lib -lssl -lcrypto"
            fi

            rp_feature_libs="$rp_feature_libs $RP_LIBDL $RP_LIBPTHREAD"

            . auto/feature
        fi

        if [ $rp_found = yes ]; then
            have=RP_SSL . auto/have
            CORE_INCS="$CORE_INCS $rp_feature_path"
            CORE_LIBS="$CORE_LIBS $rp_feature_libs"
            OPENSSL=YES
        fi
    fi

    if [ $OPENSSL != YES ]; then

cat << END

$0: error: SSL modules require the OpenSSL library.
You can either do not enable the modules, or install the OpenSSL library
into the system, or build the OpenSSL library statically from the source
with rap by using --with-openssl=<path> option.

END
        exit 1
    fi

fi
