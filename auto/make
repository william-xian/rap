
# Copyright (C) Igor Sysoev
# Copyright (C) Rap, Inc.


echo "creating $RAP_MAKEFILE"

mkdir -p $RAP_OBJS/src/core $RAP_OBJS/src/event $RAP_OBJS/src/event/modules \
         $RAP_OBJS/src/os/unix $RAP_OBJS/src/os/win32 \
         $RAP_OBJS/src/http $RAP_OBJS/src/http/v2 $RAP_OBJS/src/http/modules \
         $RAP_OBJS/src/http/modules/perl \
         $RAP_OBJS/src/mail \
         $RAP_OBJS/src/stream \
         $RAP_OBJS/src/misc


rap_objs_dir=$RAP_OBJS$rap_regex_dirsep
rap_use_pch=`echo $RAP_USE_PCH | sed -e "s/\//$rap_regex_dirsep/g"`


cat << END                                                     > $RAP_MAKEFILE

CC =	$CC
CFLAGS = $CFLAGS
CPP =	$CPP
LINK =	$LINK

END


if test -n "$RAP_PERL_CFLAGS"; then
    echo RAP_PERL_CFLAGS = $RAP_PERL_CFLAGS                   >> $RAP_MAKEFILE
    echo RAP_PM_CFLAGS = $RAP_PM_CFLAGS                       >> $RAP_MAKEFILE
    echo RAP_PM_LDFLAGS = $RAP_PM_LDFLAGS                     >> $RAP_MAKEFILE
fi


# ALL_INCS, required by the addons and by OpenWatcom C precompiled headers

rap_incs=`echo $CORE_INCS $RAP_OBJS $HTTP_INCS $MAIL_INCS $STREAM_INCS\
    | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont$rap_include_opt\1/g" \
          -e "s/\//$rap_regex_dirsep/g"`

cat << END                                                    >> $RAP_MAKEFILE

ALL_INCS = $rap_include_opt$rap_incs

END


rap_all_srcs="$CORE_SRCS"


# the core dependencies and include paths

rap_deps=`echo $CORE_DEPS $RAP_AUTO_CONFIG_H $RAP_PCH \
    | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont\1/g" \
          -e "s/\//$rap_regex_dirsep/g"`

rap_incs=`echo $CORE_INCS $RAP_OBJS \
    | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont$rap_include_opt\1/g" \
          -e "s/\//$rap_regex_dirsep/g"`

cat << END                                                    >> $RAP_MAKEFILE

CORE_DEPS = $rap_deps


CORE_INCS = $rap_include_opt$rap_incs

END


# the http dependencies and include paths

if [ $HTTP = YES ]; then

    rap_all_srcs="$rap_all_srcs $HTTP_SRCS"

    rap_deps=`echo $HTTP_DEPS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    rap_incs=`echo $HTTP_INCS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont$rap_include_opt\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    cat << END                                                >> $RAP_MAKEFILE

HTTP_DEPS = $rap_deps


HTTP_INCS = $rap_include_opt$rap_incs

END

fi


# the mail dependencies and include paths

if [ $MAIL != NO ]; then

    if [ $MAIL = YES ]; then
        rap_all_srcs="$rap_all_srcs $MAIL_SRCS"
    fi

    rap_deps=`echo $MAIL_DEPS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    rap_incs=`echo $MAIL_INCS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont$rap_include_opt\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    cat << END                                                >> $RAP_MAKEFILE

MAIL_DEPS = $rap_deps


MAIL_INCS = $rap_include_opt$rap_incs

END

fi


# the stream dependencies and include paths

if [ $STREAM != NO ]; then

    if [ $STREAM = YES ]; then
        rap_all_srcs="$rap_all_srcs $STREAM_SRCS"
    fi

    rap_deps=`echo $STREAM_DEPS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    rap_incs=`echo $STREAM_INCS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont$rap_include_opt\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    cat << END                                                >> $RAP_MAKEFILE

STREAM_DEPS = $rap_deps


STREAM_INCS = $rap_include_opt$rap_incs

END

fi


rap_all_srcs="$rap_all_srcs $MISC_SRCS"


if test -n "$RAP_ADDON_SRCS$DYNAMIC_MODULES"; then

cat << END                                                >> $RAP_MAKEFILE

ADDON_DEPS = \$(CORE_DEPS) $RAP_ADDON_DEPS

END

fi


# rap

rap_all_srcs=`echo $rap_all_srcs | sed -e "s/\//$rap_regex_dirsep/g"`

for rap_src in $RAP_ADDON_SRCS
do
    rap_obj="addon/`basename \`dirname $rap_src\``"

    test -d $RAP_OBJS/$rap_obj || mkdir -p $RAP_OBJS/$rap_obj

    rap_obj=`echo $rap_obj/\`basename $rap_src\` \
        | sed -e "s/\//$rap_regex_dirsep/g"`

    rap_all_srcs="$rap_all_srcs $rap_obj"
done

rap_all_objs=`echo $rap_all_srcs \
    | sed -e "s#\([^ ]*\.\)cpp#$RAP_OBJS\/\1$rap_objext#g" \
          -e "s#\([^ ]*\.\)cc#$RAP_OBJS\/\1$rap_objext#g" \
          -e "s#\([^ ]*\.\)c#$RAP_OBJS\/\1$rap_objext#g" \
          -e "s#\([^ ]*\.\)S#$RAP_OBJS\/\1$rap_objext#g"`

rap_modules_c=`echo $RAP_MODULES_C | sed -e "s/\//$rap_regex_dirsep/g"`

rap_modules_obj=`echo $rap_modules_c | sed -e "s/\(.*\.\)c/\1$rap_objext/"`


if test -n "$RAP_RES"; then
   rap_res=$RAP_RES
else
   rap_res="$RAP_RC $RAP_ICONS"
   rap_rcc=`echo $RAP_RCC | sed -e "s/\//$rap_regex_dirsep/g"`
fi

rap_deps=`echo $rap_all_objs $rap_modules_obj $rap_res $LINK_DEPS \
    | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont\1/g" \
          -e "s/\//$rap_regex_dirsep/g"`

rap_objs=`echo $rap_all_objs $rap_modules_obj \
    | sed -e "s/  *\([^ ][^ ]*\)/$rap_long_regex_cont\1/g" \
          -e "s/\//$rap_regex_dirsep/g"`

rap_libs=
if test -n "$RAP_LD_OPT$CORE_LIBS"; then
    rap_libs=`echo $RAP_LD_OPT $CORE_LIBS \
        | sed -e "s/\//$rap_regex_dirsep/g" -e "s/^/$rap_long_regex_cont/"`
fi

rap_link=${CORE_LINK:+`echo $CORE_LINK \
    | sed -e "s/\//$rap_regex_dirsep/g" -e "s/^/$rap_long_regex_cont/"`}

rap_main_link=${MAIN_LINK:+`echo $MAIN_LINK \
    | sed -e "s/\//$rap_regex_dirsep/g" -e "s/^/$rap_long_regex_cont/"`}


cat << END                                                    >> $RAP_MAKEFILE

build:	binary modules manpage

binary:	$RAP_OBJS${rap_dirsep}rap$rap_binext

$RAP_OBJS${rap_dirsep}rap$rap_binext:	$rap_deps$rap_spacer
	\$(LINK) $rap_long_start$rap_binout$RAP_OBJS${rap_dirsep}rap$rap_binext$rap_long_cont$rap_objs$rap_libs$rap_link$rap_main_link
	$rap_rcc
$rap_long_end

modules:
END


# rap_modules.c

if test -n "$RAP_PCH"; then
    rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"
else
    rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) \$(CORE_INCS)"
fi

cat << END                                                    >> $RAP_MAKEFILE

$rap_modules_obj:	\$(CORE_DEPS)$rap_cont$rap_modules_c
	$rap_cc$rap_tab$rap_objout$rap_modules_obj$rap_tab$rap_modules_c$RAP_AUX

END


# the core sources

for rap_src in $CORE_SRCS
do
    rap_src=`echo $rap_src | sed -e "s/\//$rap_regex_dirsep/g"`
    rap_obj=`echo $rap_src \
        | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
              -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
              -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
              -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

    cat << END                                                >> $RAP_MAKEFILE

$rap_obj:	\$(CORE_DEPS)$rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END

done


# the http sources

if [ $HTTP = YES ]; then

    if test -n "$RAP_PCH"; then
        rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"
    else
        rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) \$(CORE_INCS) \$(HTTP_INCS)"
        rap_perl_cc="\$(CC) $rap_compile_opt \$(RAP_PERL_CFLAGS)"
        rap_perl_cc="$rap_perl_cc \$(CORE_INCS) \$(HTTP_INCS)"
    fi

    for rap_source in $HTTP_SRCS
    do
        rap_src=`echo $rap_source | sed -e "s/\//$rap_regex_dirsep/g"`
        rap_obj=`echo $rap_src \
            | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

        if [ $rap_source = src/http/modules/perl/rap_http_perl_module.c ]; then

            cat << END                                        >> $RAP_MAKEFILE

$rap_obj:	\$(CORE_DEPS) \$(HTTP_DEPS)$rap_cont$rap_src
	$rap_perl_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END
        else

            cat << END                                        >> $RAP_MAKEFILE

$rap_obj:	\$(CORE_DEPS) \$(HTTP_DEPS)$rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END

        fi
     done

fi


# the mail sources

if [ $MAIL = YES ]; then

    if test -n "$RAP_PCH"; then
        rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"
    else
        rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) \$(CORE_INCS) \$(MAIL_INCS)"
    fi

    for rap_src in $MAIL_SRCS
    do
        rap_src=`echo $rap_src | sed -e "s/\//$rap_regex_dirsep/g"`
        rap_obj=`echo $rap_src \
            | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

        cat << END                                            >> $RAP_MAKEFILE

$rap_obj:	\$(CORE_DEPS) \$(MAIL_DEPS)$rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END
     done

fi


# the stream sources

if [ $STREAM = YES ]; then

    if test -n "$RAP_PCH"; then
        rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"
    else
        rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) \$(CORE_INCS) \$(STREAM_INCS)"
    fi

    for rap_src in $STREAM_SRCS
    do
        rap_src=`echo $rap_src | sed -e "s/\//$rap_regex_dirsep/g"`
        rap_obj=`echo $rap_src \
            | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

        cat << END                                            >> $RAP_MAKEFILE

$rap_obj:	\$(CORE_DEPS) \$(STREAM_DEPS)$rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END
     done

fi


# the misc sources

if test -n "$MISC_SRCS"; then

    rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"

    for rap_src in $MISC_SRCS
    do
        rap_src=`echo $rap_src | sed -e "s/\//$rap_regex_dirsep/g"`
        rap_obj=`echo $rap_src \
            | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

        cat << END                                            >> $RAP_MAKEFILE

$rap_obj:	\$(CORE_DEPS) $rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END
     done

fi


# the addons sources

if test -n "$RAP_ADDON_SRCS"; then

    rap_cc="\$(CC) $rap_compile_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"

    for rap_src in $RAP_ADDON_SRCS
    do
        rap_obj="addon/`basename \`dirname $rap_src\``"

        rap_obj=`echo $rap_obj/\`basename $rap_src\` \
            | sed -e "s/\//$rap_regex_dirsep/g"`

        rap_obj=`echo $rap_obj \
            | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

        rap_src=`echo $rap_src | sed -e "s/\//$rap_regex_dirsep/g"`

        cat << END                                            >> $RAP_MAKEFILE

$rap_obj:	\$(ADDON_DEPS)$rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END
     done

fi


# the addons config.make

if test -n "$RAP_ADDONS$DYNAMIC_ADDONS"; then

    for rap_addon_dir in $RAP_ADDONS $DYNAMIC_ADDONS
    do
        if test -f $rap_addon_dir/config.make; then
            . $rap_addon_dir/config.make
        fi
    done
fi


# Win32 resource file

if test -n "$RAP_RES"; then

    rap_res=`echo "$RAP_RES:	$RAP_RC $RAP_ICONS" \
                 | sed -e "s/\//$rap_regex_dirsep/g"`
    rap_rcc=`echo $RAP_RCC | sed -e "s/\//$rap_regex_dirsep/g"`

    cat << END                                                >> $RAP_MAKEFILE

$rap_res
	$rap_rcc

END

fi


# the precompiled headers

if test -n "$RAP_PCH"; then
    echo "#include <rap_config.h>" > $RAP_OBJS/rap_pch.c

    rap_pch="src/core/rap_config.h $OS_CONFIG $RAP_OBJS/rap_auto_config.h"
    rap_pch=`echo "$RAP_PCH:	$rap_pch" | sed -e "s/\//$rap_regex_dirsep/g"`

    rap_src="\$(CC) \$(CFLAGS) $RAP_BUILD_PCH $rap_compile_opt \$(ALL_INCS)"
    rap_src="$rap_src $rap_objout$RAP_OBJS/rap_pch.obj $RAP_OBJS/rap_pch.c"
    rap_src=`echo $rap_src | sed -e "s/\//$rap_regex_dirsep/g"`

    cat << END                                                >> $RAP_MAKEFILE

$rap_pch
	$rap_src

END

fi


# dynamic modules

if test -n "$RAP_PCH"; then
    rap_cc="\$(CC) $rap_compile_opt $rap_pic_opt \$(CFLAGS) $rap_use_pch \$(ALL_INCS)"
else
    rap_cc="\$(CC) $rap_compile_opt $rap_pic_opt \$(CFLAGS) \$(ALL_INCS)"
    rap_perl_cc="\$(CC) $rap_compile_opt $rap_pic_opt \$(RAP_PERL_CFLAGS)"
    rap_perl_cc="$rap_perl_cc \$(ALL_INCS)"
fi

for rap_module in $DYNAMIC_MODULES
do
    eval rap_module_srcs="\$${rap_module}_SRCS"
    eval eval rap_module_libs="\\\"\$${rap_module}_LIBS\\\""

    eval rap_module_modules="\$${rap_module}_MODULES"
    eval rap_module_order="\$${rap_module}_ORDER"

    rap_modules_c=$RAP_OBJS/${rap_module}_modules.c

    cat << END                                    > $rap_modules_c

#include <rap_config.h>
#include <rap_core.h>

END

    for mod in $rap_module_modules
    do
        echo "extern rap_module_t  $mod;"         >> $rap_modules_c
    done

    echo                                          >> $rap_modules_c
    echo 'rap_module_t *rap_modules[] = {'        >> $rap_modules_c

    for mod in $rap_module_modules
    do
        echo "    &$mod,"                         >> $rap_modules_c
    done

    cat << END                                    >> $rap_modules_c
    NULL
};

END

    echo 'char *rap_module_names[] = {'           >> $rap_modules_c

    for mod in $rap_module_modules
    do
        echo "    \"$mod\","                      >> $rap_modules_c
    done

    cat << END                                    >> $rap_modules_c
    NULL
};

END

    echo 'char *rap_module_order[] = {'           >> $rap_modules_c

    for mod in $rap_module_order
    do
        echo "    \"$mod\","                      >> $rap_modules_c
    done

    cat << END                                    >> $rap_modules_c
    NULL
};

END

    rap_modules_c=`echo $rap_modules_c | sed -e "s/\//$rap_regex_dirsep/g"`

    rap_modules_obj=`echo $rap_modules_c \
        | sed -e "s/\(.*\.\)c/\1$rap_objext/"`

    rap_module_objs=
    for rap_src in $rap_module_srcs
    do
        case "$rap_src" in
            src/*)
                rap_obj=$rap_src
                ;;
            *)
                rap_obj="addon/`basename \`dirname $rap_src\``"
                mkdir -p $RAP_OBJS/$rap_obj
                rap_obj="$rap_obj/`basename $rap_src`"
                ;;
        esac

        rap_module_objs="$rap_module_objs $rap_obj"
    done

    rap_module_objs=`echo $rap_module_objs \
        | sed -e "s#\([^ ]*\.\)cpp#$RAP_OBJS\/\1$rap_objext#g" \
              -e "s#\([^ ]*\.\)cc#$RAP_OBJS\/\1$rap_objext#g" \
              -e "s#\([^ ]*\.\)c#$RAP_OBJS\/\1$rap_objext#g" \
              -e "s#\([^ ]*\.\)S#$RAP_OBJS\/\1$rap_objext#g"`

    rap_deps=`echo $rap_module_objs $rap_modules_obj $LINK_DEPS \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_regex_cont\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    rap_objs=`echo $rap_module_objs $rap_modules_obj \
        | sed -e "s/  *\([^ ][^ ]*\)/$rap_long_regex_cont\1/g" \
              -e "s/\//$rap_regex_dirsep/g"`

    rap_obj=$RAP_OBJS$rap_dirsep$rap_module$rap_modext

    if [ "$RAP_PLATFORM" = win32 ]; then
        rap_module_libs="$CORE_LIBS $rap_module_libs"
    fi

    rap_libs=
    if test -n "$RAP_LD_OPT$rap_module_libs"; then
        rap_libs=`echo $RAP_LD_OPT $rap_module_libs \
            | sed -e "s/\//$rap_regex_dirsep/g" -e "s/^/$rap_long_regex_cont/"`
    fi

    rap_link=${CORE_LINK:+`echo $CORE_LINK \
        | sed -e "s/\//$rap_regex_dirsep/g" -e "s/^/$rap_long_regex_cont/"`}

    rap_module_link=${MODULE_LINK:+`echo $MODULE_LINK \
        | sed -e "s/\//$rap_regex_dirsep/g" -e "s/^/$rap_long_regex_cont/"`}


    cat << END                                            >> $RAP_MAKEFILE

modules:	$rap_obj

$rap_obj:	$rap_deps$rap_spacer
	\$(LINK) $rap_long_start$rap_binout$rap_obj$rap_long_cont$rap_objs$rap_libs$rap_link$rap_module_link
$rap_long_end

$rap_modules_obj:	\$(CORE_DEPS)$rap_cont$rap_modules_c
	$rap_cc$rap_tab$rap_objout$rap_modules_obj$rap_tab$rap_modules_c$RAP_AUX

END

    for rap_source in $rap_module_srcs
    do
        case "$rap_source" in
            src/*)
                rap_obj=`echo $rap_source | sed -e "s/\//$rap_regex_dirsep/g"`
                ;;
            *)
                rap_obj="addon/`basename \`dirname $rap_source\``"
                rap_obj=`echo $rap_obj/\`basename $rap_source\` \
                    | sed -e "s/\//$rap_regex_dirsep/g"`
                ;;
        esac

        rap_obj=`echo $rap_obj \
            | sed -e "s#^\(.*\.\)cpp\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)cc\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)c\\$#$rap_objs_dir\1$rap_objext#g" \
                  -e "s#^\(.*\.\)S\\$#$rap_objs_dir\1$rap_objext#g"`

        rap_src=`echo $rap_source | sed -e "s/\//$rap_regex_dirsep/g"`

        if [ $rap_source = src/http/modules/perl/rap_http_perl_module.c ]; then

            cat << END                                        >> $RAP_MAKEFILE

$rap_obj:	\$(ADDON_DEPS)$rap_cont$rap_src
	$rap_perl_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END
        else

            cat << END                                        >> $RAP_MAKEFILE

$rap_obj:	\$(ADDON_DEPS)$rap_cont$rap_src
	$rap_cc$rap_tab$rap_objout$rap_obj$rap_tab$rap_src$RAP_AUX

END

        fi
    done
done
