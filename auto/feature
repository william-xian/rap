
# Copyright (C) Igor Sysoev
# Copyright (C) Rap, Inc.


echo $rap_n "checking for $rap_feature ...$rap_c"

cat << END >> $RAP_AUTOCONF_ERR

----------------------------------------
checking for $rap_feature

END

rap_found=no

if test -n "$rap_feature_name"; then
    rap_have_feature=`echo $rap_feature_name \
                   | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`
fi

if test -n "$rap_feature_path"; then
    for rap_temp in $rap_feature_path; do
        rap_feature_inc_path="$rap_feature_inc_path -I $rap_temp"
    done
fi

cat << END > $RAP_AUTOTEST.c

#include <sys/types.h>
$RAP_INCLUDE_UNISTD_H
$rap_feature_incs

int main(void) {
    $rap_feature_test;
    return 0;
}

END


rap_test="$CC $CC_TEST_FLAGS $CC_AUX_FLAGS $rap_feature_inc_path \
          -o $RAP_AUTOTEST $RAP_AUTOTEST.c $RAP_TEST_LD_OPT $rap_feature_libs"

rap_feature_inc_path=

eval "/bin/sh -c \"$rap_test\" >> $RAP_AUTOCONF_ERR 2>&1"


if [ -x $RAP_AUTOTEST ]; then

    case "$rap_feature_run" in

        yes)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $RAP_AUTOTEST >> $RAP_AUTOCONF_ERR 2>&1; then
                echo " found"
                rap_found=yes

                if test -n "$rap_feature_name"; then
                    have=$rap_have_feature . auto/have
                fi

            else
                echo " found but is not working"
            fi
        ;;

        value)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $RAP_AUTOTEST >> $RAP_AUTOCONF_ERR 2>&1; then
                echo " found"
                rap_found=yes

                cat << END >> $RAP_AUTO_CONFIG_H

#ifndef $rap_feature_name
#define $rap_feature_name  `$RAP_AUTOTEST`
#endif

END
            else
                echo " found but is not working"
            fi
        ;;

        bug)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $RAP_AUTOTEST >> $RAP_AUTOCONF_ERR 2>&1; then
                echo " not found"

            else
                echo " found"
                rap_found=yes

                if test -n "$rap_feature_name"; then
                    have=$rap_have_feature . auto/have
                fi
            fi
        ;;

        *)
            echo " found"
            rap_found=yes

            if test -n "$rap_feature_name"; then
                have=$rap_have_feature . auto/have
            fi
        ;;

    esac

else
    echo " not found"

    echo "----------"    >> $RAP_AUTOCONF_ERR
    cat $RAP_AUTOTEST.c  >> $RAP_AUTOCONF_ERR
    echo "----------"    >> $RAP_AUTOCONF_ERR
    echo $rap_test       >> $RAP_AUTOCONF_ERR
    echo "----------"    >> $RAP_AUTOCONF_ERR
fi

rm -rf $RAP_AUTOTEST*
